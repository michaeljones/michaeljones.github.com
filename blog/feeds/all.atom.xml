<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>DevBlog</title><link href="http://michaeljones.github.io/blog/" rel="alternate"></link><link href="http://michaeljones.github.io/blog/feeds/all.atom.xml" rel="self"></link><id>http://michaeljones.github.io/blog/</id><updated>2013-10-11T00:00:00+13:00</updated><entry><title>Journal - Day 5</title><link href="http://michaeljones.github.io/blog/posts/2013/10/11/journal-day-5/" rel="alternate"></link><updated>2013-10-11T00:00:00+13:00</updated><author><name>Michael Jones</name></author><id>tag:michaeljones.github.io/blog,2013-10-11:posts/2013/10/11/journal-day-5/</id><summary type="html">&lt;div class="section" id="intentions"&gt;
&lt;h2&gt;Intentions&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Read first 6 chapters of Learn You a Haskell for Great Good.&lt;/li&gt;
&lt;li&gt;Further investigate quickstart issue for Breathe.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="results"&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Read the first 4 chapters of Learn You a Haskell.&lt;/li&gt;
&lt;li&gt;Pushed a fix for a possible KeyError in the project handling code for Breathe.&lt;/li&gt;
&lt;li&gt;Took a cursory look at contributing to the Libre Office project. Their
&lt;a class="reference external" href="http://www.libreoffice.org/developers/"&gt;developers&lt;/a&gt; page is the place to start with their &lt;a class="reference external" href="https://wiki.documentfoundation.org/Easy_Hacks"&gt;easy hacks&lt;/a&gt; page being an
early target, I imagine. I have no particular love for the Libre Office project,
but a great deal of respect as I have used it often.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Journal - Day 4</title><link href="http://michaeljones.github.io/blog/posts/2013/10/10/journal-day-4/" rel="alternate"></link><updated>2013-10-10T00:00:00+13:00</updated><author><name>Michael Jones</name></author><id>tag:michaeljones.github.io/blog,2013-10-10:posts/2013/10/10/journal-day-4/</id><summary type="html">&lt;div class="section" id="intentions"&gt;
&lt;h2&gt;Intentions&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Work through the &lt;strong&gt;#31&lt;/strong&gt; to &lt;strong&gt;#41&lt;/strong&gt; Haskell problems.&lt;/li&gt;
&lt;li&gt;Read first 6 chapters of Learn You a Haskell for Great Good.&lt;/li&gt;
&lt;li&gt;Fix issue reported in the Breathe quick-start documentation.&lt;/li&gt;
&lt;li&gt;Look into curses development in Haskell.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="results"&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I spent a long time looking at Haskell problem &lt;strong&gt;#27&lt;/strong&gt; and then went on to
other things. I think it is an interesting problem and I should be able to do
it, however it is beginning to frustrate me for other reasons.&lt;/p&gt;
&lt;p&gt;The issue is my approach: I'm treating this list of problems as a good
introduction to Haskell but it isn't really. It is a set of interesting
problems of growing difficulty which can be solved with Haskell if you want.
The issue is that they aren't designed to introduce you to different parts of
the language and in particular they start asking complex problems which simple
parts of the language instead of simple problems with increasingly complex
parts of the language. I'm not learning Haskell here; I'm learning parts of
mathematics instead. An excellent destination but not where I'm going.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://stackoverflow.com/a/1016986"&gt;stackoverflow post&lt;/a&gt; which suggests
these problems alse suggests the &lt;a class="reference external" href="http://projecteuler.net/"&gt;Project Euler&lt;/a&gt;
problems another source to work through but they suffer from exactly the same
issues.&lt;/p&gt;
&lt;p&gt;Perhaps the average person interested in Haskell has a mathematical background
and so these problems, which really aren't that hard, are more bread and
butter to them. For me, I'm going to have to find another path. Perhaps
focussing on Learn You a Haskell and then trying to replace some of my
various workflow helper scripts with Haskell versions as a test.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Ironically, I did not get around to reading the Learn You a Haskell chapters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I could not reproduce the issue with the Breathe quickstart documentation,
though more investigation might uncover it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I did not look into curses development.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I did go to the gym, tour the New Zealand parliament, have a singing lesson and
have drinks with friends. Some days have other ideas than coding.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Journal - Day 3</title><link href="http://michaeljones.github.io/blog/posts/2013/10/09/journal-day-3/" rel="alternate"></link><updated>2013-10-09T09:01:00+13:00</updated><author><name>Michael Jones</name></author><id>tag:michaeljones.github.io/blog,2013-10-09:posts/2013/10/09/journal-day-3/</id><summary type="html">&lt;div class="section" id="intentions"&gt;
&lt;h2&gt;Intentions&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Continue &lt;strong&gt;99 Haskell Problems&lt;/strong&gt; and reach #25.&lt;/li&gt;
&lt;li&gt;Finish up work for Breathe ticket &lt;strong&gt;#65&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Listen to &lt;strong&gt;A Taste of Haskell - Part 2&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="results"&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reached Haskell Problem #26 but only by skipping the ones involving random
numbers which I did at the recommendations of this post.&lt;/li&gt;
&lt;li&gt;Finished up &lt;strong&gt;#65&lt;/strong&gt; on Breathe which turned out to be easier than expected. I
still do not understand the constructors for the docutils node classes.&lt;/li&gt;
&lt;li&gt;Watched the second part of &lt;a class="reference external" href="http://michaeljones.github.io/blog/posts/2013/10/07/video-taste-of-haskell-part-2/"&gt;A Taste of Haskell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Also watched an &lt;a class="reference external" href="http://michaeljones.github.io/blog/posts/2013/10/09/video-rust-infoq/"&gt;introductory talk&lt;/a&gt; on Rust.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="todo"&gt;
&lt;h2&gt;Todo&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Email docutils list for explanation of constructors.&lt;/li&gt;
&lt;li&gt;Extend folder navigation script to source python virtualenv where desirable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Video: Rust - InfoQ</title><link href="http://michaeljones.github.io/blog/posts/2013/10/09/video-rust-infoq/" rel="alternate"></link><updated>2013-10-09T00:00:00+13:00</updated><author><name>Michael Jones</name></author><id>tag:michaeljones.github.io/blog,2013-10-09:posts/2013/10/09/video-rust-infoq/</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.infoq.com/presentations/Rust"&gt;Short talk&lt;/a&gt; about the Rust
programming language from Mozilla. Excellent broad overview of the language
which gives a feel for what inspired it and what it is trying to achieve.&lt;/p&gt;
&lt;p&gt;To a C++ programmer that is growing frustrated with the growing complexity of
the language, Rust feels like it is a good thing.&lt;/p&gt;
&lt;p&gt;References the following blogs for more information:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://smallcultfollowing.com/babysteps/"&gt;Baby Steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pcwalton.github.com"&gt;pcwalton&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="rust"></category></entry><entry><title>Journal - Day 2</title><link href="http://michaeljones.github.io/blog/posts/2013/10/08/journal-day-2/" rel="alternate"></link><updated>2013-10-08T10:01:00+13:00</updated><author><name>Michael Jones</name></author><id>tag:michaeljones.github.io/blog,2013-10-08:posts/2013/10/08/journal-day-2/</id><summary type="html">&lt;div class="section" id="intentions"&gt;
&lt;h2&gt;Intentions&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Continue 99 Haskell Problems and reach no. 20.&lt;/li&gt;
&lt;li&gt;Chase up support tickets #65 &amp;amp; #66 on Breathe.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="results"&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Reached problem no. 17. Definitely learning a bit more about haskell whilst
still only juggling lists in various ways. I would kill for some easily
approachable code that did some real work but all in good time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Ticket #66 remains inactive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Ticket #65 resulted in more work than anticipated as the problem is
non-standard. Potential for interesting work for fixing it but it took a while
to get back into the Breathe set up which I have neglected for a while.&lt;/p&gt;
&lt;p&gt;Getting to play around with virtualenv a little more though which is something
I've been late in picking up.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>Video: Taste of Haskell - Part 1</title><link href="http://michaeljones.github.io/blog/posts/2013/10/07/video-taste-of-haskell-part-1/" rel="alternate"></link><updated>2013-10-07T19:01:00+13:00</updated><author><name>Michael Jones</name></author><id>tag:michaeljones.github.io/blog,2013-10-07:posts/2013/10/07/video-taste-of-haskell-part-1/</id><summary type="html">&lt;p&gt;An &lt;a class="reference external" href="http://blip.tv/oreilly-open-source-convention/oscon-2007-simon-peyton-jones-a-taste-of-haskell-part-i-329701"&gt;OSCON 2007 talk&lt;/a&gt;
introducing Haskell to imperative programmers by Simon Peyton Jones.&lt;/p&gt;
&lt;p&gt;I like his pacing and attitude and I think there is a reasonable amount to be
learnt despite the fact that the slides are not provided on the site or
displayed in the video. I am sure they can be tracked down.&lt;/p&gt;
&lt;p&gt;I can't tell at the moment how much I understood purely from the quality of the
talk and how much from the previous efforts I've made to get to grips with
Haskell.&lt;/p&gt;
</summary><category term="haskell"></category></entry><entry><title>Journal - Day 1</title><link href="http://michaeljones.github.io/blog/posts/2013/10/07/journal-day-1/" rel="alternate"></link><updated>2013-10-07T15:01:00+13:00</updated><author><name>Michael Jones</name></author><id>tag:michaeljones.github.io/blog,2013-10-07:posts/2013/10/07/journal-day-1/</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I have managed to get this &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; based blog
up. I choose Pelican because a simple google unearthed &lt;a class="reference external" href="http://pydanny.com/choosing-a-new-python-based-blog-engine.html"&gt;this&lt;/a&gt; from
pydanny with a comment from Kenneth Reitz and that is enough of an endorsement
for me.&lt;/p&gt;
&lt;p&gt;Plus I like rst.&lt;/p&gt;
&lt;p&gt;Things, like URLs, might chop and change for a bit whilst I figure this out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Done the first 7 of the 99 Haskell Problems with a combination of half
forgotten memories and referring to &lt;a class="reference external" href="http://learnyouahaskell.com/"&gt;Learn You a Haskell&lt;/a&gt;. My efforts are stumbling and awkward and
nothing works first time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;I watched &lt;a class="reference external" href="http://michaeljones.github.io/blog/posts/2013/10/07/video-taste-of-haskell-part-1/"&gt;Simon Peyton-Jones - A Taste of Haskell Part I&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Beginning</title><link href="http://michaeljones.github.io/blog/posts/2013/10/07/beginning/" rel="alternate"></link><updated>2013-10-07T13:46:00+13:00</updated><author><name>Michael Jones</name></author><id>tag:michaeljones.github.io/blog,2013-10-07:posts/2013/10/07/beginning/</id><summary type="html">&lt;p&gt;I am embarking on some time for some personal projects and this blog is designed
to mark my progress and keep on track. I am currently far from clear about what
to work on but I have a few loose ideas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Experiment with the &lt;a class="reference external" href="http://www.rust-lang.org/"&gt;Rust&lt;/a&gt; language and get a
feel for how to compares with C++.&lt;/p&gt;
&lt;p&gt;I am keen to pursue Rust as I have a reasonable and growing amount of
experience with C++ and would love to see a replacement with equal power but
less cruft.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Explore &lt;a class="reference external" href="http://clojure.org/"&gt;Clojure&lt;/a&gt; as a lisp and a language on the JVM.&lt;/p&gt;
&lt;p&gt;I have been watching some of Rich Hickey's Greatest Hits and still yearn for
that moment of enlightenment which legend suggests is brought on by
understanding lisp.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Become familiar with Haskell and work through the &lt;a class="reference external" href="http://www.haskell.org/haskellwiki/H-99:_Ninety-Nine_Haskell_Problems"&gt;99 Haskell problems&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More and more the functional approaches to coding intrigue me and feel like
the correct way forward. What can be more functional than Haskell?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Continue to support &lt;a class="reference external" href="https://github.com/michaeljones/breathe"&gt;Breathe&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My Sphinx-Doxygen bridge project which has a small community of users and a
low but steady stream of requests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Push forward with development on build and environment system prototype built
on &lt;a class="reference external" href="martine.github.io/ninja"&gt;Ninja&lt;/a&gt; and inspired by &lt;a class="reference external" href="https://github.com/nerdvegas/rez"&gt;Rez&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A prototype built at my last place of work seemed to have curious potential to
it. I'd like to push it to the point where it succeeds or breaks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Explore programming with audio.&lt;/p&gt;
&lt;p&gt;I have a few musical outlets in my life and I find myself increasingly
interested in how it is represented in data and how malleable it might be in
that form.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Help with my brother's &lt;a class="reference external" href="https://github.com/Everzen/RigControls"&gt;Rig Controls&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;It has promise and a family connection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Improve my knowledge of Open GL &amp;amp; SDL.&lt;/p&gt;
&lt;p&gt;I have been in graphics for too long without getting to grips with either.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Video: Taste of Haskell - Part 2</title><link href="http://michaeljones.github.io/blog/posts/2013/10/07/video-taste-of-haskell-part-2/" rel="alternate"></link><updated>2013-10-07T00:00:00+13:00</updated><author><name>Michael Jones</name></author><id>tag:michaeljones.github.io/blog,2013-10-07:posts/2013/10/07/video-taste-of-haskell-part-2/</id><summary type="html">&lt;p&gt;Second half of the Simon Peyton-Jones' introduction to Haskell. If I was not
convinced before, I am now; this is a really excellent talk to give you some
background to Haskell and some pleasantly gentle steps towards understanding it.&lt;/p&gt;
&lt;p&gt;Provides examples of pure functions and combining them with code that needs to
do the IO before going on to discuss the wider Haskell community.&lt;/p&gt;
&lt;p&gt;I really love his presentation manner. It is quite disarming.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blip.tv/oreilly-open-source-convention/oscon-2007-simon-peyton-jones-a-taste-of-haskell-part-ii-330372"&gt;Talk&lt;/a&gt;
and &lt;a class="reference external" href="http://research.microsoft.com/en-us/um/people/simonpj/papers/haskell-tutorial/"&gt;slides&lt;/a&gt;
(required as the video does not show them.)&lt;/p&gt;
</summary><category term="haskell"></category></entry></feed>